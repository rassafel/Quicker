plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'idea'
    id 'eclipse'
}

group 'ru.rassafel'

repositories {
    mavenCentral()
}


java {
    toolchain {
        sourceCompatibility = JavaLanguageVersion.of(17)
        targetCompatibility = JavaLanguageVersion.of(17)
    }
}

bootJar {
    layered {
        enabled = true
        includeLayerTools = System.hasProperty('CI')
    }
    archiveClassifier = 'boot'
}

jar {
    archiveClassifier = ''
}

idea {
    module {
        if (System.hasProperty('CI')) {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}


jacocoTestReport {
    reports {
        xml {
            enabled true
        }

        html {
            enabled true
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'ru/rassafel/quicker/**/model/**',
                'ru/rassafel/quicker/QuickerApplication*'
            ])
        }))
    }
}



dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.3'
        mavenBom 'org.codehaus.groovy:groovy-bom:3.0.12'
        mavenBom 'org.spockframework:spock-bom:2.2-groovy-3.0'
    }
}

configurations {
    compileOnly.extendsFrom annotationProcessor
    testCompileOnly.extendsFrom compileOnly
    testAnnotationProcessor.extendsFrom testCompileOnly
    testRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    compileOnly("org.springframework.boot:spring-boot-devtools")

    implementation 'org.codehaus.groovy:groovy'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//    implementation 'org.liquibase:liquibase-core'

//    runtimeOnly 'com.h2database:h2'
//    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.codehaus.groovy:groovy-json'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.spockframework:spock-spring'
}
